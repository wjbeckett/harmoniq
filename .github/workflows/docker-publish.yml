name: Docker Build and Publish to GHCR

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag # This will pick up your vX.Y.Z tag
            type=sha,prefix=sha-
            # Only tag 'latest' if the pushed tag is for a main branch release (you might need a different strategy here)
            # Or, more simply, if you make 'main' reflect the latest release tag:
            type=raw,value=latest,enable=${{ github.ref_type == 'tag' && github.event_name == 'push' && github.repository_default_branch == 'main' }}
            # A simpler 'latest' for any tag push to main if main *is* your release branch and you tag on main:
            # type=raw,value=latest,enable=${{ github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v') && github.ref_name == github.event.repository.default_branch }}
            # Safest for now: Only 'main' branch pushes get 'latest' if you want 'latest' to track main development.
            # Or, if a tag is pushed that matches a certain pattern (e.g. not an -rc or -beta tag).
            # For now, let's make 'latest' point to pushes to the 'main' branch.
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}


      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./src 
          file: ./src/Dockerfile 
          push: ${{ github.event_name != 'pull_request' }} 
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max