name: Docker Build and Publish to GHCR

# Controls when the workflow will run
on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
      - develop # Trigger on pushes to the develop branch
    tags:
      - 'v*.*.*' # Trigger on tags like v1.0.0, v1.0.1, etc.
  pull_request:
    branches:
      - main
      - develop # Optionally build on PRs to these branches (won't push)

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    permissions:
      contents: read       # Needed to check out the repository
      packages: write      # Needed to push Docker images to GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # Your GitHub username or organization name
          password: ${{ secrets.GITHUB_TOKEN }} # GitHub automatically provides this token

      - name: Extract metadata (tags, labels) for Docker
        id: meta # Give this step an ID to refer to its outputs
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # e.g., ghcr.io/wjbeckett/harmoniq
          # For tags:
          # type=semver enables versions like v1.0.0, v1.1
          # type=ref enables tags based on git events (branch, tag, pr)
          # type=sha enables tagging with the git SHA (short version)
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=sha,prefix=sha-
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }} # Tag 'latest' only for pushes to main branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./src
          file: ./src/Dockerfile # Explicit path to Dockerfile
          push: ${{ github.event_name != 'pull_request' }} # Only push if not a pull request
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # Enable GitHub Actions cache for Docker layers
          cache-to: type=gha,mode=max

      # This step creates a GitHub release when a tag is pushed
      - name: Create Release on Tag Push
        if: startsWith(github.ref, 'refs/tags/v') # Only run for tags starting with 'v'
        uses: ncipollo/release-action@v1
        with:
          # This will use the tag name as the release name and the commit message for the tag as the body
          # You can customize this further
          token: ${{ secrets.GITHUB_TOKEN }}